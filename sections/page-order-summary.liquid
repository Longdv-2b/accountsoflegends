<div>
    <div class='flag-content-main'></div>
    <div class='details'></div>
    <div class='form-os'>

        {% if customer.email == blank %}
          <div>
              <div class='label-email'>* Required</div>
              <input class='input-email' type='email' placeholder='Enter your email address' />
          </div>
        {% else %}
          <b id="customer-info" customer="{{ customer.email }}" style="display: none;">{% for code in customer.metafields['custom_2b_io'].discounts_available limit: 1 %}{{ code }}{% endfor %}</b>
      {% endif %}

        <div>
            <div class='wrapper-discount-code'>
                <input class='input-text' type='text' placeholder='Discount code' />
                <button class='btn'>Apply</button>
            </div>
            <div class='info-prices'>

                <div class='price-percent'>
                    <span>-25%</span>
                </div>

                <div class='price-old'>
                    <span></span>
                </div>

                <div>
                    <span>Total Price:</span>
                    <span class='price-final'></span>
                </div>

                <div>
                </div>
            </div>
        </div>
        <button class='sm-data'>Buy Boost Now</button>
    </div>
</div>
<script>
  
    let server = '';
    let winrate = '';
    let level = '';
    let rank = '';
    let win = '';
    let champion = '';
    let essence = '';
    let skin = '';
    let division = '';

    const pathName = location.pathname;
    const keyProductHandle = pathName.slice(pathName.lastIndexOf('/') + 1);

    async function postData(url = '', data = {}) {
      const response = await fetch(url, {
        method: 'POST',
        mode: 'cors',
        cache: 'no-cache',
        credentials: 'same-origin',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json',
          'pass_dev': 'pass_dev',
        },
        redirect: 'follow',
        referrerPolicy: 'no-referrer',
        body: JSON.stringify(data)
      });
      return response.json();
    }

    function handlePrintPrice(priceOld, priceSale,)

    function handlePrintInfoProduct(){
      fetch(`${location.origin}/products/${keyProductHandle}.js`)
      .then(response => response.json())
      .then(data => {
          console.log("data =>", data)
          let nodeImageProduct = '';
          for (let tag of data.tags) {
              const downTag = tag.toLocaleLowerCase();
              if (downTag.includes('server')) {
                  server = tag
              }
              if (downTag.includes('level')) {
                  level = tag
              }
              if (downTag.includes('winrate')) {
                  winrate = tag
              }
              if (downTag.includes('rank')) {
                  rank = tag
              }
              if (downTag.includes('win/loss')) {
                  win = tag
              }
              if (downTag.includes('champion')) {
                  champion = tag
              }
              if (downTag.includes('blue essence')) {
                  essence = tag
              }
              if (downTag.includes('skins')) {
                  skin = tag
              }
              if (downTag.includes('division')) {
                  division = tag
              }
          }
          const stylesSvg = [
              'iron',
              'bronze',
              'silver',
              'gold',
              'platinum',
              'diamond',
              'master'
          ]
          nodeImageProduct += `
          <svg viewBox="0 0 300 408" class="flag flag-${handleCheckTagsProduct(data.tags,stylesSvg) || 'iron'} flag-current" style="width: 80% !important;height: auto !important;">
              <defs>
                  <linearGradient x2="0" y2="1" id="current-flag-pole-gradient">
                  <stop offset="0%" stop-color="#FFFFFF"></stop>
                  <stop offset="33%" stop-color="#333333"></stop>
                  <stop offset="50%" stop-color="#FFFFFF"></stop>
                  <stop offset="73%" stop-color="#8F8F8F"></stop>
                  <stop offset="100%" stop-color="#000000"></stop>
                  </linearGradient>
                  <linearGradient x2="0" y2="1" id="current-base-gradient">
                  <stop class="flag__base-gradient-start" offset="0%"></stop>
                  <stop class="flag__base-gradient-stop" offset="100%"></stop>
                  </linearGradient>
                  <clipPath id="current-baseShape">
                  <path d="M290,3c0,-0.796 -0.316,-1.559 -0.879,-2.121c-0.562,-0.563 -1.325,-0.879 -2.121,-0.879c-28.169,0 -245.831,0 -274,0c-0.796,0 -1.559,0.316 -2.121,0.879c-0.563,0.562 -0.879,1.325 -0.879,2.121c0,31.369 0,298.658 0,322.72c0,1.072 0.571,2.062 1.499,2.599c14.078,8.147 122.921,71.13 137.002,79.279c0.927,0.536 2.071,0.536 2.998,0c14.08,-8.148 122.914,-71.126 137,-79.278c0.929,-0.537 1.501,-1.529 1.501,-2.602c0,-24.078 0,-291.35 0,-322.718Z"></path>
                  </clipPath>
              </defs>
              <rect class="flag__pole" height="10" rx="5" width="300" x="0" y="4" style="fill: url(&quot;#current-flag-pole-gradient&quot;);"></rect>
              <path class="flag__base" d="M290,3c0,-0.796 -0.316,-1.559 -0.879,-2.121c-0.562,-0.563 -1.325,-0.879 -2.121,-0.879c-28.169,0 -245.831,0 -274,0c-0.796,0 -1.559,0.316 -2.121,0.879c-0.563,0.562 -0.879,1.325 -0.879,2.121c0,31.369 0,298.658 0,322.72c0,1.072 0.571,2.062 1.499,2.599c14.078,8.147 122.921,71.13 137.002,79.279c0.927,0.536 2.071,0.536 2.998,0c14.08,-8.148 122.914,-71.126 137,-79.278c0.929,-0.537 1.501,-1.529 1.501,-2.602c0,-24.078 0,-291.35 0,-322.718Z" style="fill: url(&quot;#current-base-gradient&quot;);"></path>
              <path class="flag__decor--outer" d="M280.472,293.517c-0.216,0.046 -0.432,0.094 -0.648,0.143c-17.081,4.032 -28.667,24.458 -21.178,41.931l-109.174,61.948l-108.621,-61.635c4.271,-9.589 3.133,-21.201 -2.755,-29.75c-4.507,-6.545 -11.586,-11.211 -19.457,-12.745l-0.167,-0.032l0,-530.838l262,0l0,530.978Zm-259,-527.978l0,525.442c17.873,4.736 29.545,25.12 23.15,43.56c0,0 104.85,59.549 104.85,59.549l105.449,-59.835c-0.068,-0.2 -0.133,-0.401 -0.197,-0.602c-5.283,-16.84 4.813,-37.203 22.665,-42.455l0.083,-0.024l0,-525.635l-256,0Z"></path>
              <path class="flag__decor--inner" d="M274.472,319.428l-125,70.611l-125,-70.611l0,-549.389l250,0l0,549.389Zm-249,-548.389l0,547.805l124,70.047l124,-70.047l0,-547.805l-248,0Z"></path>
              <g clip-path="url(#current-baseShape)">
                  <image class="flag-shadow" href="{{'shade-1.png' | asset_url }}"></image>
                  <image class="flag-shadow" href="{{'shade-2.png' | asset_url }}"></image>
                  <image class="flag-shadow" href="{{'shade-1.png' | asset_url }}"></image>
                  <image class="flag-shadow" href="{{'shade-1.png' | asset_url }}"></image>
                  <image class="flag-shadow" href="{{'shade-3.png' | asset_url }}"></image>
              </g>
          </svg>
          `;

          stylesSvg.pop();
          nodeImageProduct+=`
          <div class="flag-content">
              <div _ngcontent-serverapp-c7="" class="flag-rank text-bj">
              <img _ngcontent-serverapp-c7="" alt="" class="flag-rank__icon" src="${data.featured_image}">
              <div _ngcontent-serverapp-c7="" class="editable">
                  <span _ngcontent-serverapp-c7="" class="flag-rank__division">
                  ${handleCheckTagsProduct(data.tags,stylesSvg)}
                  </span>
                  ${division && `<span _ngcontent-serverapp-c7="" class="flag-rank__subdivision">${division}</span>`}
              </div>
              </div>
          </div>
          `;
          document.querySelector('.flag-content-main').innerHTML = nodeImageProduct;


          let nodeInfoProduct = `
          <div class='detail'>
              <span>Server:</span>
              <span>${getWordLast(server)}</span>
          </div>
          <div class='detail'>
              <span>Level:</span>
              <span>${getWordLast(level)}</span>
          </div>
          <div class='detail'>
              <span>Rank:</span>
              <span>${getWordLast(rank, true)}</span>
          </div>
          <div class='detail'>
              <span>Winrate:</span>
              <span>${getWordLast(winrate)}</span>
          </div>
          <div class='detail'>
              <span>Champions:</span>
              <span>${getWordLast(champion)}</span>
          </div>
          <div class='detail'>
              <span>Blue Essences:</span>
              <span>${getWordLast(essence)}</span>
          </div>
          <div class='detail'>
              <span>Skins:</span>
              <span>${getWordLast(skin)}</span>
          </div>
          `;
          document.querySelector('.details').innerHTML = nodeInfoProduct;

          const customerInfo = document.querySelector('#customer-info');

          if(customerInfo && customerInfo.textContent) {
            
            postData(
              'https://d050-14-162-199-43.ngrok.io/shopify-app/validate-discount-code',
              {
                "email" : "{{ customer.email }}",
                "discount_code": customerInfo.textContent,
                "price": `${data.price}`
              }  
            )
            .then(resDiscountCode => {
              console.log('resDiscountCode=>>', resDiscountCode);
              document.querySelector('.price-final').textContent = Shopify.formatMoney(resDiscountCode.price_after) ;
            })
            .catch(error => {
              console.log('error', error)
            })
          }else {
            document.querySelector('.price-final').textContent = Shopify.formatMoney(data.price);
          }

      });
    }
    handlePrintInfoProduct();

    function handleCheckTagsProduct(arrTag, arrSvg) {
        let result = arrSvg.find(i => arrTag.some(y => y.toLocaleLowerCase().includes(i.toLocaleLowerCase())))
        return result;
    }

    function getWordLast(string, tagRank){
        if(tagRank){
            let wordLast = string.replaceAll('Rank', '');
            return wordLast;
        }else {
            let wordLast = string.split(' ');
            return wordLast[wordLast.length -1];
        }
    }
</script>